# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.15.0

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: "Build Project"
          command: "yarn build"

      - save_cache:
          paths:
            - build
            - package.json
            - firebase.json
            - .firebaserc
            - cypress
            - cypress.json
            - docker-compose.yml
            - Dockerfile-e2e
            - Dockerfile-web
            - nginx.conf
          key: v1-build-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
  deploy:
    docker:
      - image: circleci/node:10.15.0
    working_directory: ~/repo
    steps:
      - restore_cache:
          key: v1-build-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: "Deploy to Firebase Hosting"
          command: "./node_modules/.bin/firebase deploy --token=$FIREBASE_TOKEN --project project-highlight"
  e2e:
    docker:
      - image: circleci/node:10.15.0
    working_directory: ~/repo
    steps:
      - restore_cache:
          key: v1-build-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - setup_remote_docker
      - run:
          name: "List"
          command: "ls -a"
      - run:
          name: "Start Containers"
          command: "docker-compose up -d --build"
      - run:
          name: "Run Tests"
          command: "docker-compose run --name project-highlight-cypress-run cypress ./node_modules/.bin/cypress run"
      - run:
          name: "Collect artifacts"
          command: "docker cp project-highlight-cypress-run:/usr/src/app/cypress $(pwd)/cypress"
      - store_artifacts:
          path: cypress/
          when: always

workflows:
  version: 2
  -deploy:
    jobs:
      - build
      - e2e:
          requires:
            - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
